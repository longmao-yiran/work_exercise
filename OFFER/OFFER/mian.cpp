#include "uk_test.h"
#include "offer_1.h"
#include "offer_2.h"
#include "offer_3_1.h"
#include "offer_3_2.h"
#include "offer_4.h"
#include "offer_5.h"
#include "offer_6.h"
#include "offer_7.h"
#include "offer_8.h"
#include "offer_9.h"
#include "offer_10.h"
#include "offer_11.h"
#include "offer_12.h"
#include "offer_13.h"
#include "offer_14.h"
#include "offer_15.h"
#include "offer_16.h"
#include "offer_17.h"
#include "offer_18_1.h"
#include "offer_18_2.h"
#include "offer_19.h"
#include "offer_20.h"
#include "offer_21.h"
#include "offer_22.h"
#include "offer_23.h"
#include "offer_24.h"
#include "offer_25.h"
#include "offer_26.h"
#include "offer_27.h"
#include "offer_28.h"
#include "offer_29.h"
#include "offer_30.h"
#include "offer_31.h"
#include "offer_32_1.h"
#include "offer_32_2.h"
#include "offer_32_3.h"
#include "offer_33.h"
#include "offer_34.h"
#include "offer_35.h"
#include "offer_36.h"
#include "offer_37.h"
#include "offer_38.h"
#include "offer_38_1.h"
#include "offer_38_2.h"
#include "offer_39.h"

using namespace std;

int main()
{
	//offer_uk_test();

	//offer_1_test();				// 赋值运算符
	//offer_2_test();				// 实现一个单例模式   
	//offer_3_1_test();				// 数组中的重复数字
	//offer_3_2_test();				// 数组中的重复数字
	//offer_4_test();				// 二维数组中的查找
	//offer_5_test();				// 替换空格
	//offer_6_test();				// 从头到尾打印链表
	//offer_7_test();				// 重建二叉树
	//offer_8_test();				// 二叉树的下一个节点
	//offer_9_test();				// 用两个栈实现队列
	//offer_10_test();				// 菲波那切数列
	//offer_11_test();				// 旋转数组
	//offer_12_test();				// 矩阵中的路径
	//offer_13_test();				// 机器人的运动范围
	//offer_14_test();				// 剪绳子
	//offer_15_test();				// 二进制中1的个数
	//offer_16_test();				// 数值的整数次方
	//offer_17_test();				// 打印从1到最大的n位数 
	//offer_18_1_test();			// 在O(1)时间删除链表结点
	//offer_18_2_test();			// 删除链表中重复的结点
	//offer_19_test();				// 正则表达式匹配
	//offer_20_test();				// 表示数值的字符串
	//offer_21_test();				// 调整数组顺序使奇数位于偶数前面
	//offer_22_test();				// 链表中倒数第k个结点
	//offer_23_test();				// 链表中环的入口结点
	//offer_24_test();				// 反转链表
	//offer_25_test();				// 合并两个排序的链表
	//offer_26_test();				// 树的子结构
	//offer_27_test();				// 二叉树的镜像
	//offer_28_test();				// 对称的二叉树
	//offer_29_test();				// 顺时针打印矩阵
	//offer_30_test();				// 包含min函数的栈
	//offer_31_test();				// 栈的压入、弹出序列
	//offer_32_1_test();			// 从上往下打印二叉树
	//offer_32_2_test();			// 把二叉树打印成多行
	//offer_32_3_test();			// 按之字形顺序打印二叉树
	//offer_33_test();				// 二叉搜索树的后序遍历序列
	//offer_34_test();				// 二叉树中和为某一值的路径
	//offer_35_test();				// 复杂链表的复制
	//offer_36_test();				// 二叉搜索树与双向链表
	//offer_37_test();				// 序列化二叉树
	//offer_38_test();				// 字符串的排列
	//offer_38_1_test();			// 字符串组合数
	//offer_38_2_test();			// 八皇后
	offer_39_test();				// 

	getchar();
	return 0;
}