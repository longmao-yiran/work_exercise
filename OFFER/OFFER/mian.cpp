#include "uk_test.h"
#include "offer_1.h"
#include "offer_2.h"
#include "offer_3_1.h"
#include "offer_3_2.h"
#include "offer_4.h"
#include "offer_5.h"
#include "offer_6.h"
#include "offer_7.h"
#include "offer_8.h"
#include "offer_9.h"
#include "offer_10.h"
#include "offer_11.h"
#include "offer_12.h"
#include "offer_13.h"
#include "offer_14.h"
#include "offer_15.h"
#include "offer_16.h"
#include "offer_17.h"
#include "offer_18_1.h"
#include "offer_18_2.h"
#include "offer_19.h"
#include "offer_20.h"
#include "offer_21.h"
#include "offer_22.h"
#include "offer_23.h"
#include "offer_24.h"

using namespace std;

int main()
{
	//offer_uk_test();


	//offer_1_test();				// 赋值运算符
	//offer_2_test();				// 实现一个单例模式   
	//offer_3_1_test();				// 数组中的重复数字
	//offer_3_2_test();				// 数组中的重复数字
	//offer_4_test();				// 二维数组中的查找
	//offer_5_test();				// 替换空格
	//offer_6_test();				// 从头到尾打印链表
	//offer_7_test();				// 重建二叉树
	//offer_8_test();				// 二叉树的下一个节点
	//offer_9_test();				// 用两个栈实现队列
	//offer_10_test();				// 菲波那切数列
	//offer_11_test();				// 旋转数组
	//offer_12_test();				// 矩阵中的路径
	//offer_13_test();				// 机器人的运动范围
	//offer_14_test();				// 剪绳子
	//offer_15_test();				// 二进制中1的个数
	//offer_16_test();				// 数值的整数次方
	//offer_17_test();				// 打印从1到最大的n位数 
	//offer_18_1_test();			// 在O(1)时间删除链表结点
	//offer_18_2_test();			// 删除链表中重复的结点
	//offer_19_test();				// 正则表达式匹配
	//offer_20_test();				// 表示数值的字符串
	//offer_21_test();				// 调整数组顺序使奇数位于偶数前面
	//offer_22_test();				// 链表中倒数第k个结点
	//offer_23_test();				// 链表中环的入口结点
	offer_24_test();				// 反转链表
	getchar();
	return 0;
}